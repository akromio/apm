use (
  {EnvCommand as EnvCommandBase} = alias://cli
)

/**
 * The prefix to use in the variables.
 */
const prefix = "KRM_"

/**
 * The env command.
 */
export struct EnvCommand: EnvCommandBase
  @override @hidden
  pub fn buildRows() -> rows: list
    # (1) build var descriptions
    const vars = {
      DIR_NAME =
        desc = "The local dir name where the akromio data is."

      ENV_FILE =
        desc = "The .env file to load when started. Relative to $DIR_NAME."
      
      PRIVATE_ENV_FILE =
        desc = "The .private.env file to load when started. Relative to $DIRNAME."
      
      APM_DIR_NAME =
        desc = "The local dir name where apm install the catalogs."
        
      JOB_CATALOGS_PATH =
        desc = "The dir path to prefix when root job catalog name is relative."
      
      REGISTRIES =
        desc = "The available registries to use in order, separated by commas."
      
      REGISTRY_SKYNET_PORTAL =
        desc = "The Skynet portal (w/o https://) to use when unset."
      
      REGISTRY_SKYNET_SKYLINK =
        desc = "The skylink to use when unset."
      
      REGISTRY_SKYNET_PRIVATE_KEY =
        desc = "The private key to use for setting entries of the Skynet registry."
        password = true
      
      REGISTRY_SKYNET_PUBLIC_KEY =
        desc = "The public key to use for getting entries from the Skynet registry."
    }

    # (2) build rows
    rows = [
      ["Variable", "Value", "Desc."]
    ]

    for each name, item := vars do
      name = prefix + name

      var value = ps.env[name] ?? ""
      if item.password and value then value = "*****"

      rows.push([name, value, item.desc])
